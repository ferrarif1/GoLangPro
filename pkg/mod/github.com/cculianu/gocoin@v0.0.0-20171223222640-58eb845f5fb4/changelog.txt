0.9.2
* Order of B_secret and A_public_key arguments swapped for "type2determ" tool
* A new tool "type2next" to calculate a next type-2 deterministic public key/address
* Wallet has a new option "-1" that used along with "-l" does not re-ask for password
* Wallet can print hashes of each transaction's input to be signed ("-raw <txfile> -hashes")
* Wallet can sign a raw hash ("-hash <hash>") with a given key ("-sign <pubadr>")
* A new tool "txaddsig" for inserting signature + public key into a raw transaction
* Show entire content of the current wallet in MakeTx tab, if the book would be empty

0.9.1
* Little faster algos (by peterdettman) for field's sqrt() and inv() (in "btc/newec")
* Fix: wallet is not able to properly "-sign" with imported (un)compressed addresses
* Pre-caching of all the wallets' balances include commented out addresses
* "Discus Fish" added to the mining pools

0.9.0
* The "downloader" app which can download the entire blockchain in less than 2 hours
* Major performance improvement of UTX reindexing (rebuilding) functionality
* Bugfix: the blance cache could cause panic when two outputs were being spent from the same address
* Pre-cache all the addresses from all the wallet files at startup
* Banned IP range 129.132.230.0/24 changed to 129.132.230.70 - 129.132.230.100
* No TexUI mode for apps with no access to stdin (use "-textui=false" switch)

0.8.7
* Added a special wallet "ADRESSES" that contains the address book (for MakeTx tab)
* Support for "virgin" addresses in the wallet files (put space before the address).
  (virgin addresses are hidden the wallet tab as long as their balance is zero)

0.8.6
* Added "Load TX" to the top menu in WebUI
* Allow for hidden wallets (start filename with ".") and a nested sub-wallets (up to 3 levels deep)
* Fix: after changing a label in a wallet file it get changed in the unspent list as well
* Fix: the list of unspent outputs is now being sorted properly (by block height)
* "wallet -d" prints number of (yet) unsigned inputs
* "versigmsg" renamed to "btcversig" and some new features were added
* Expire external IPs after one hour from last seen
* Added new fields "Nonce", "TxCount", and "TxOffset" to "btc.Block" (set in "btc.NewBlock")

0.8.5
* From now on every "payment.zip" contains also the unsigned raw transaction file ("tx2sign.txt")
* Added a cache for address balances to speed up switching between wallets
* Building the wallet for Windows does not require mingw anymore (now it uses msvcrt.dll for _getch)

0.8.4
* Support for JoinCoin sort of transaction in the wallet
* We do not add mined txs to TransactionsRejected map (or at least try to)
* WebUI cosmetic here and there...
* Transaction and EC signing parts moved from the wallet app to the btc package
* Added "-raw <filename>" and "-d <filename>" command to the wallet (to sign, decode transaction file)
* Fixed decoding of P2SH-type addresses in btc.NewAddrFromPkScript()
* Added support for relay=0 received from peers (do not send tx invs to them)

0.8.3
* Support for GOCOIN_WALLET_CONFIG env variable (enforces the wallet's config file)
* Added CFG.PayCommandName so you could e.g. make it .bat or .sh (the default is "pay_cmd.txt")
* The home tab shows time next to each unspent outputs
* Cosmetic here and there...

0.8.2
* "fetchbal" can work via tor now (set env variable TOR=localhost:9150)
* Any own tx can now be sent to only a single random peer (privacy feature)
* You can include another wallet inside a text wallet file (use "@filename")

0.8.1
* "fetchbalance" renamed "fetchbal" and now it works with coinbase txs properly
* New tool fetchtx to downlaod raw tx from blockexplorer.com
* Block subnet 129.132.230.0/24 (fixed for now)
* Allow to setup User-Agent reported by the version messsage (a privacy feature)
* Some minor changes in fetchbalance
* Disconnect & Ban peers that have not sent a single inv to us for 15 min since connecting

0.8.0
* Souce code of the client hugely restructured
* A new tool "fetchbalance" that can fetch the ballance from blockchain.info & blockexplorer.com

0.7.8
* Password chars are hidden when being input (if wallet does not build, delete "wallet/hidepass.go").

0.7.7
* "MakeTx" tab is precise now converting between Satoshi and BTC values

0.7.6
* "MakeTx" tab in WebUI (to pre-make the command for the wallet app)
* Droppig a peer (from TextUI or WebUI) bans its IP by the way
* Added "-useallinputs" switch to the wallet app

0.7.5
* Added CFG.MiningStatHours so minig stats are not fixed to 24 hours anymore

0.7.4
* A new port of sipa's secp256k1 lib, based on the 10x26 filed implemetnation (btc/newec)
* The new btc/newec speedup enabled by default.
* The old native speedup's source code removed.

0.7.3
* A new (native Go) EC_Verify speedup, based on sipa's secp256k1 code (client/speedup/mygonat.go)
* Cosmetic chanegs in WebUI

0.7.2
* A new (DLL based) EC_Verify speedup for Windows (client/speedup/sipadll.go)

0.7.1
* Wallet's random numbers (used for ECDSA_Sign) don't rely on security of "crypt/random" package

0.7.0
* A major rewrite around shared memory access, in the network client

0.6.7
* Added some protection against racing conditions
* Do not switch off GC while verifying a block
* Added UI command "defrag" that purges and recompresses the block database
* Added snappy compression for the block database (its faster than gzip)

0.6.6
* Added support for wallet.cfg to specify some default values
* Wallet's "-t2" and "-t3" command line swiches replaced with "-type=X"
* Labels returned in balance.xml are HTML escaped

0.6.5
* Fixed a critical bug in script parsing (0x00 at top of the stack was not considered as "if true")
* Fetch seed peers in a background and save peers DB to disk before quiting
* Ctrl+C works now also during rescan and allows to continue later from where stopped.

0.6.4
* Support for deterministic wallet Type-3 (keeps other keys safe, if one got compromised)
* The wallet can export private key now, in the satoshi's base58 format (-dump switch)

0.6.3
* Show balance of per address at the Wallets tab

0.6.2
* Added support for WebUI switchable wallets

0.6.1
* Improved script_test.go, so it works directly with satoshi's json files

0.6.0
* Added support for verifying (rejecting) P2SH transactions
* Added handling of OP_1ADD script opcopde and fixed some other opcodes
* UI cmd "unspent" returns outputs sorted by block height

0.5.8
* Added some more satoshi-script-evaluation compatiblity patches (and unit tests)

0.5.7
* By default, don't download same block from more than 3 peers simultaneously (CFG.Net.MaxBlockAtOnce)
* Fixed a critical blockchain parsing issue, with SIGHASH_SINGLE sigs (was rejecting valid blocks)

0.5.5
* The wallet now supports Type-2 deterministic keys (use "-t2" switch)
* Make the node's beeping setup configurable though gocoin.conf
* Allow to decode (display) a transaction's details (only txs that are in memory pool)
* Minor improvements in net module (i.e. shrink send buffer after each write)

0.5.3
* XSS protection on WebUI and IP access control
* Some new network security features
* Like Satoshi client, do not process incoming messages having more than 1MB in send buffer
* Some changes around qdb database (improved syncs for unspent db, added counters)

0.5.2
* WebUI improvements

0.5.1
* Yet more improved "qdb" is now a part of the repo

0.5.0
* Requires new "qdb" ... much imporved statrup times.
* Never keeps unwind records in memory (only on disk)
* Allows to not keep old unspent outputs in mem. Modify "UTXOCacheBlks" in the config to switch it on.

0.4.8
* Added new blocks' timing stats to the WebUI
* New tool "importblocks" for importing blocks from Satoshi's DB

0.4.7
* Improvements in tx memory pool

0.4.6
* Big rework in the network module

0.4.4
* Allow sorting of transaction tables in WebUI

0.4.3
* Some more WebUI templates, and further extensions
* Fixed a bug with checking new block height in block_check.go

0.4.2
* Allows loading and broadcasting of local txs via WebUI
* Allows to download the balance folder via WebUI
* More WebUI templates

0.4.1
* Do not route txs that have any output lower than a fee for 0.5KB
* Added support for a config file
* Fixed a bug introduced in 0.4.0 that was removing own txs from the pool
* Templates for WebUI

0.4.0
* Added tx routing (you can switch it off with "-txr=false")
* Further WebUI extensions
* A bunch of other code changes, that I don't remember now

0.3.5
* Addded WebUI - by default on http://127.0.0.1:8833/
* Improved framework for mining stats
* Changed the way "getblocks" is requested, plus some other hard to describe net related changes

0.3.4
* Arithmetic script opcodes check for the 4 bytes limit at input values

0.3.3
* Better external IP address discovery and droping connections to self

0.3.2
* Added a memory cache for blocks database (in btc/blockdb.go)

0.3.0
* Added sipasec cgo for EC_Verify (over 5 times faster than openssl)

0.2.15
* Support for gzip compressed blocks inside blockchain.dat
* A tool to compress blockchain.dat (tools/compressdb.go)
* Rejects blocks that would cause forks long ago in a past
